# Issue 17: デザイン修正（タスク詳細と初期画面）

## 概要
タスク詳細のアコーディオンコンテンツの視認性を改善し、初期画面の背景デザインをIssue #3の方針に沿って調整する。

## 関連Issue
- Issue #3: マテリアルデザイン、ガラスのような透明感、白を基調とした色味、オブジェクトのセンタリング
- Issue #11: デザイン修正（初期）
- Issue #13/14: デザイン修正（追加）
- Issue #15/16: デザイン修正（アイコンとレイアウト）

## 実装計画

### フェーズ1: タスク詳細（アコーディオンコンテンツ）のデザイン修正
1.  **`src/components/TaskItem.tsx` の修正:**
    *   アコーディオンで展開される `content` 表示領域の背景色を、`TaskModal` の内部テーマ（例: `rgba(255, 255, 255, 0.15)`）に合わせて変更する。
    *   `content` のテキスト色を、新しい背景色に対して視認性の高い色（例: 白）に変更する。
    *   必要に応じて、`padding`、`borderRadius`、`boxShadow` などを調整し、ガラスのような透明感と浮遊感を出す。

### フェーズ2: 初期画面の背景デザイン修正
1.  **`app/app.css` の修正:**
    *   `html`, `body` の背景色設定を見直し、Issue #3 の「白を基調とした色味」と「ガラスのような透明感」を反映させる。
    *   `background-color` をより明るい色（例: `rgba(240, 240, 240, 0.8)`）に変更し、`backdrop-filter: blur(...)` を適用する。
    *   ダークモード時の背景色も同様に調整し、コントラストと視認性を確保する。

### フェーズ3: 全体的な調整とテスト
1.  **CSSの整理と最適化:**
    *   追加されたスタイルが既存のスタイルと競合しないか確認し、必要に応じて `app/app.css` 内で整理・統合する。
    *   インラインスタイルは可能な限り `app/app.css` に移動する。
2.  **Vitestによる単体テストの実行:**
    *   既存のテストが引き続きパスすることを確認する。
    *   必要に応じて、新しいUI要素やロジックに対するテストを追加する。
3.  **PlaywrightによるE2Eテストの検討:**
    *   視覚的な変更がユーザー体験に影響を与えないか、E2Eテストで確認することを検討する（ただし、このフェーズでは実装しない）。
4.  **ビルドとデプロイの確認:**
    *   `npm run build` でビルドが成功することを確認する。
    *   `npm run dev` で開発サーバーが正常に起動し、変更が反映されていることを確認する。
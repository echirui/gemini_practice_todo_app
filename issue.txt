# Issue 13: デザイン修正（追加）

## 概要
既存のデザインをさらに改善し、特にタブの表示安定性とポップアップの視認性を向上させる。Issue #3 のデザイン要素をより深く取り入れる。

## 関連Issue
- Issue #3: マテリアルデザイン、ガラスのような透明感、白を基調とした色味、オブジェクトのセンタリング
- Issue #11: デザイン修正（初期）

## 実装計画

### フェーズ1: TaskModalのコントラスト改善とデザイン強化
1.  **`src/components/TaskModal.tsx` の修正:**
    *   モーダルのオーバーレイ（背景）の色をより暗い `rgba(0,0,0,0.7)` などに変更し、コントラストを向上させる。
    *   モーダル内のテキスト（h2, input, textarea, buttonの文字色）を白基調または明るい色に変更し、視認性を高める。
    *   Issue #3 で言及されたガラスのような透明感やセンタリングがさらに強調されるように、既存のスタイルを微調整する。

### フェーズ2: タブの高さ安定化と選択エフェクトの追加
1.  **タブの高さ安定化:**
    *   `src/components/TodoList.tsx` または `app/routes/home.tsx` 内で、タスクリストを囲むコンテナ（例: `.todo-list-container` や `main-container`）のスタイルを分析する。
    *   タスクの数によって高さが変わらないように、`min-height` や `height` を設定するか、`overflow-y: auto` を使用してスクロール可能にするなどの対応を検討する。
    *   `app/app.css` に適切なスタイルを追加する。
2.  **タブ選択エフェクトの追加:**
    *   `src/components/Tabs.tsx` と `app/app.css` を修正し、タブが選択された際に視覚的なエフェクト（例: 背景色の変化、下線の太さや色の変化、テキストの拡大、影の追加など）を追加する。
    *   `transition` プロパティを使用して、スムーズなアニメーションを実現する。

### フェーズ3: 全体的な調整とテスト
1.  **CSSの整理と最適化:**
    *   追加されたスタイルが既存のスタイルと競合しないか確認し、必要に応じて `app/app.css` 内で整理・統合する。
    *   インラインスタイルは可能な限り `app/app.css` に移動する。
2.  **Vitestによる単体テストの実行:**
    *   既存のテストが引き続きパスすることを確認する。
    *   必要に応じて、新しいデザイン要素に対するテストを追加する。
3.  **PlaywrightによるE2Eテストの検討:**
    *   視覚的な変更がユーザー体験に影響を与えないか、E2Eテストで確認することを検討する（ただし、このフェーズでは実装しない）。
4.  **ビルドとデプロイの確認:**
    *   `npm run build` でビルドが成功することを確認する。
    *   `npm run dev` で開発サーバーが正常に起動し、変更が反映されていることを確認する。